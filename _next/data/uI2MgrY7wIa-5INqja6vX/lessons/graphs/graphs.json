{"pageProps":{"post":{"attributes":{"title":"Graphs","description":"So much here"},"html":"<h3 id=\"the-most-bestest-of-the-data-structures\">The most bestest of the data structures</h3>\n<p>SOOO many problems eventually become graph problems.  And this is by far the\nlargest section of algorithms.</p>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n\n<h3 id=\"first-lets-just-describe-a-graph\">First, lets just describe a graph</h3>\n<p>(whiteboard)</p>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n\n<h3 id=\"all-trees-are-graphs-not-all-graphs-are-trees\">All trees are graphs, not all graphs are trees</h3>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n\n<h3 id=\"terminology-of-graphs\">Terminology of Graphs</h3>\n<p>This is not an exhaustive list of terms, but it is the terms that we may end up\nusing today.<br/></p>\n<br/>\n\n<h4 id=\"graph-terms\">Graph Terms</h4>\n<p>cycle: When you start at Node(x), follow the links, and end back at Node(x)<br/>\nacyclic: A graph that contains no cycles<br/>\nconnected: When every node has a path to another node<br/>\ndirected: When there is a direction to the connections.  Think Twitter<br/>\nundirected: !directed.  Think Facebook (i haven&#39;t been on in 10 years, it may have changed)<br/>\nweighted: The edges have a weight associated with them.  Think Maps<br/>\ndag: Directed, acyclic graph.<br/></p>\n<br/>\n\n<h4 id=\"implementation-terms\">Implementation Terms</h4>\n<p>node: a point or vertex on the graph<br/>\nedge: the connection betxit two nodes<br/></p>\n<br/>\n\n<h4 id=\"big-o\">Big O</h4>\n<p>BigO is commonly stated in terms of <code>V</code> and <code>E</code> where <code>V</code> stands for vertices\nand <code>E</code> stands for edges</p>\n<p>So <code>O(V * E)</code> means that we will check every vertex, and on every vertex we check\nevery edge</p>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n\n<h3 id=\"how-are-graphs-represented\">How are graphs represented</h3>\n<ul>\n<li>adj list</li>\n<li>adj matrix\n(whiteboard)</li>\n</ul>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n\n<h3 id=\"basic-searches\">Basic Searches</h3>\n<p>BFS and DFS still exist on a graph, and they are virtually no different than on\na tree.</p>\n<br/>\n<br/>\n\n<p>(whiteboard + complexity)</p>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n\n<h3 id=\"lets-implement-these\">Lets implement these!</h3>\n<ul>\n<li>BFS on Adj. Matrix</li>\n<li>DFS on Adj. List</li>\n</ul>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n\n<h3 id=\"dijkstras-shortest-path\">Dijkstra&#39;s Shortest Path</h3>\n<ul>\n<li>what is it?</li>\n<li>where is it used?</li>\n<li>variations of it\n(don&#39;t whiteboard yet)</li>\n</ul>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n\n<h1 id=\"probably-your-first-graph-algo-after-bfsdfs\">Probably your first graph algo after BFS/DFS</h1>\n<ul>\n<li>don&#39;t forget to say non negative weights</li>\n</ul>\n<p>(whiteboard)</p>\n<ul>\n<li>running time</li>\n</ul>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n<br/>\n\n","slug":"graphs","title":"Graphs","section":"Graphs","icon":"dumpster-fire","filePath":"/home/runner/work/fem-algos/fem-algos/lessons/11-graphs/A-graphs.md","nextSlug":"/fem-algos/lessons/graphs/graphs2","prevSlug":"/fem-algos/lessons/trees/questions"}},"__N_SSG":true}